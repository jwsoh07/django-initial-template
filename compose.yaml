services:
  app:
    build:
      context: .
    # reflects any changes in the root of the local project 
    # directory to the working directory of the container
    volumes:
      - ./:/app
    ports:
      - 8000:8000
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=${ENVIRONMENT}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      database:
        condition: service_healthy

  database:
    image: postgres:12-alpine
    volumes:
      - db-dev-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "django-dev-db",
          "-U",
          "postgres"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db-dev-data:
